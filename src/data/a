<p>So I decided to develop a video game ! It&rsquo;s a pretty exciting artistic journey that I&rsquo;m happy to share with you. In this first blog post, I will go over the context of this project, share some of the early prototype with you and give you some insights into what the game development process looks like, including some novel AI workflows.</p><p><strong>Some context and background before we get gaming:</strong></p><p>Currently on a gap year, I am both trying out some side project ideas I have accumulated over the years and travelling the world from Australia to Europe. I spent the first 3 months working on a collaborative social media platform idea, Riples. But soon I realised that I wasn&rsquo;t passionate enough about that industry, leading me to the tough decision to step away from Riples.</p><p>As I was winding down that project and looking for the next thing to work on, I realised that I wanted something challenging, closer to my passions, and where I could learn new skills. And that&rsquo;s when the idea of making games about sustainability came about, hitting the sweet spot I had been searching for: a blend of innovation, learning, and purpose.</p><p><strong>A bit about game develpment and how I am going about it:</strong></p><p>You might not be aware, but the journey of creating a video game by yourself, known in the industry as indie game development, is actually pretty hard. Not only do you need, as a single person, to come up with the mechanics of the game, but there is also the coding, visual arts,&nbsp;soundscapes,&nbsp;and marketing. To top it off, you are competing against the big studio&rsquo;s blockbuster games such as Assassin&rsquo;s creed, League of Legends, or GTA (also called AAA, pronounced &ldquo;triple-A&rdquo;, games), and a horde of other super talend indie developers.</p><p>Not being a talented artist, nor having much experience with game development (though I have played a lot in the past), I needed to find a good strategy to compete with these talented folks. The idea is to explore the niche of educational games, allowing me to leverage the teaching skill and sustainability knowledge that differentiates me from other game developers. But, before getting started, I needed to set some rules for myself, as to not get lost in the void of video game making and come back a year later with nothing to show for it. So the 3 simple rules for my first game are:</p><ol>	<li>Develop a playable prototype in a month, and assess engagement from it.</li>	<li>Innovate only on the educational aspect, copy a lot for the rest.</li>	<li>Among the new skills, focus most on marketing (partly because it is a big weakness of mine but also the most transferable skills).</li></ol><p><strong>The first iteration:</strong></p><p>At first I had to decide on an existing game genre that would lend itself well to the energy transition theme (a subset of sustainability topic which I am well acquainted with as a solar engineer). I ended up going with the tower defense genre, as it is quite simple: enemies follow a path and the player must build towers that shoot enemies preventing them from reaching the end of the path. In our game, the enemies are power hungry appliances, which the towers &quot;shoot&quot; electricity and fuel at. Armed with a strong game concept, the only thing missing was a name, and after some iterations with ChatGPT, we settled on &quot;<strong>WattWars</strong>&quot;.&nbsp;</p><p><img src="https://ckeditor.com/apps/ckfinder/userfiles/files/Screenshot%202024-03-10%20at%2012_30_00%20PM.png" style="height:261px; width:513px" /></p><p><em>Example of a popular tower defense game, Plant vs Zombies, where the towers are plants and enemies zombies attacking your house. A great source of inspiration for WattWarts&nbsp;</em></p><p>After nailing down the concept and researching existing tower defense games existing tower defense, I got started following a Unity tower defense tutorial. In parallel,&nbsp;I started making my own art with DALL-E (OpenAI&#39;s text to image AI) for the tutorial. Fine-tuning prompts to capture a desired style was entertaining, though I quickly realized DALL-E&#39;s limitations with pixel art. I tried several AI alternatives, including mid-journey, yet none significantly outperformed the others at pixel art. Ultimately, I ended with workflow that combined AI-generated art and manual pixel art techniques:</p><ol>	<li>Using a specific prompts to define the art style to DALL-E, and asking for a few variations.</li>	<li>Importing the good result(s) into a pixel art software, Piskel.</li>	<li>In Piskel, selecting the most compelling elements, refining them, and erasing any backgrounds to achieve a polished look.</li></ol><p>This workflow not only bypasses some intricacies of pixel art, such as dithering and shading, but also leverages&nbsp;the Piskel capability to animate&nbsp; art. animating with AI would be harder as the model rapidly loose context (ie change styles) and don&#39;t have a grasp of physics (the recent sora-2 was some of the first successfull attempt but it&#39;s not available commercially).</p><p><img src="https://ckeditor.com/apps/ckfinder/userfiles/files/Screenshot%202024-03-10%20at%201_01_27%20PM.png" style="height:490px; width:600px" />&nbsp;<img src="https://ckeditor.com/apps/ckfinder/userfiles/files/FrigidAir.gif" style="height:200px; width:200px" /></p><p><em>Examples of art created using the workflow. Animating was suer fun and you should have seen me walking around the coworking space trying to figure out how the legs move when we are walking !</em></p><p>To sum it up, getting familiar with unity and figuring out a nice AI pixel art workflow, the main goals for this first week of development (#1/#4), where achieved. So I spend the rest of the time getting other mechanics of tower defense game set-up in unity, and you can find below you can find a quick demo of where I have gotten to.</p>